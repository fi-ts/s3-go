syntax = "proto3";

package metalstack.io.s3.api.v1;

import "metalstack/io/s3/api/v1/common.proto";

option go_package = "pkg/apis/v1";

service S3UserService {
  rpc Get(S3UserDescribeRequest) returns (S3UserWithCredentials);
  rpc List(S3UserListRequest) returns (S3UserList);
  rpc Create(S3UserCreateRequest) returns (S3UserWithCredentials);
  rpc Delete(S3UserDeleteRequest) returns (S3User);
  rpc Update(S3UserUpdateRequest) returns (S3UserWithCredentials);
}

message S3User {
  string name = 1;
  string tenant = 2;
  string project = 3;
  string email = 4;
  int64 max_buckets = 5;
  string display_name = 6;
  string partition = 7;
  string endpoint = 8;
}

message S3UserWithCredentials {
  string name = 1;
  string tenant = 2;
  string project = 3;
  string email = 4;
  int64 max_buckets = 5;
  string display_name = 6;
  string partition = 9;
  string endpoint = 10;
  repeated S3UserKey keys = 11;
}

message S3UserList {
  repeated S3User users = 1;
}

message S3UserDescribeRequest {
  string name = 1;
  string tenant = 2;
  string project = 3;
  string partition = 4;
}

message S3UserDeleteRequest {
  string name = 1;
  string tenant = 2;
  string project = 3;
  string partition = 4;
  bool force = 5;
}

message S3UserCreateRequest {
  string name = 1;
  string tenant = 2;
  string project = 3;
  string email = 4;
  int64 max_buckets = 5;
  string display_name = 6;
  string partition = 7;
  S3UserKey key = 8;
}

message S3UserUpdateRequest {
  string name = 1;
  string tenant = 2;
  string project = 3;
  repeated string remove_access_keys = 4;
  repeated S3UserKey add_keys = 5;
  string partition = 6;
}

message S3UserListRequest {
  string partition = 1;
}
